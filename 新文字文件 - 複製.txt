        public double dbapiGate(double dbIncreaseGate)  //Gate
        {
            double dbRstGate = 0.0;

            {  //工作門 讀取與顯示
                int rslt = 0;
                string position = "";
                string speed = "";

                //讀取 工作門 資訊
                rslt = clsServoControlWMX3.WMX3_check_ServoOnOff((int)WMX3軸定義.工作門, ref position, ref speed);

                //計算讀取長度
                if (position != "")
                {
                    dbRstGate = double.Parse(position);
                }

                //顯示運動速度
                double dbSpeed = 0.0;
                if (speed != "")
                {
                    dbSpeed = double.Parse(speed);
                }

                //變更顏色
                if (rslt == 1)
                {
                    select_工作門.BackColor = Color.Red;
                    lbl_acpos_工作門.BackColor = Color.White;
                    lbl_spd_工作門.BackColor = Color.White;
                }
                else
                {
                    select_工作門.BackColor = Color.Green;
                    lbl_acpos_工作門.BackColor = Color.Gray;
                    lbl_spd_工作門.BackColor = Color.Gray;
                }

                //顯示資訊
                lbl_acpos_工作門.Text = dbRstGate.ToString("F3");
                lbl_spd_工作門.Text = dbSpeed.ToString("F3");

                //bshow_debug_RAW_Conver_Back_Value
                lbl_工作門_RAW.Visible = bshow_debug_RAW_Conver_Back_Value;
                lbl_工作門_Convert.Visible = bshow_debug_RAW_Conver_Back_Value;
                lbl_工作門_Back.Visible = bshow_debug_RAW_Conver_Back_Value;
                if (bshow_debug_RAW_Conver_Back_Value == true)
                    if (position != "")
                    {
                        int MaxRAW = 56580;
                        int MinRAW = -1271;
                        double Maxdb = 575.0;
                        double Mindb = 0.0;
                        Normal calculate = new Normal();
                        int Convert = (int)(double.Parse(position));
                        double dbGet = calculate.Map(Convert, MaxRAW, MinRAW, Maxdb, Mindb);

                        lbl_工作門_RAW.Text = Convert.ToString();
                        lbl_工作門_Convert.Text = dbGet.ToString("F3");
                        int cnback = (int)calculate.Map((int)dbGet, (int)Maxdb, (int)Mindb, MaxRAW, MinRAW);
                        lbl_工作門_Back.Text = cnback.ToString();
                    }

            }

            if (dbIncreaseGate == dbRead || dbapiNozzleZ(dbRead) >= 0.5)
            {
                //this.Text = "Z軸尚未回到上位";
            }
            else
            {  //工作門 變更位置
                // 取得欲變更的的浮點數
                double fChangeGate = dbIncreaseGate;

                //伸長量overflow保護
                //if (fChangeGate >= 40.35)
                //{
                //    fChangeGate = 40.35;
                //}

                //計算補正至長度的數值
                int iTargetGate = (int)(fChangeGate * 100);

                //執行移動工作門
                int axis = (int)WMX3軸定義.工作門;
                int position = iTargetGate;
                int speed = (int)(50.00 * 100 * Multiplier);
                int accel = speed * 2;
                int daccel = speed * 2;
                clsServoControlWMX3.WMX3_Pivot(axis, position, speed, accel, daccel);
            }

            return dbRstGate;
        }  // end of public double dbapiGate(double dbIncreaseGate)  //Gate
