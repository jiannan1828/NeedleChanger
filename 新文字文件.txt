        public double dbapiIAI(double dbIncreaseGate)  //IAI
        {
            Normal calculate = new Normal();
                const int    MaxRAW =   3000;
                const int    MinRAW =      0;
                const double Maxdb  =   30.0;
                const double Mindb  =    0.0;
                const double Sum    =   3000;
                const double dbSpdF =  Sum / Maxdb;

            double dbRstIAI = 0.0;

            {  // start of Socket定位攝影機軸 讀取與顯示
                int    rslt     = 0;
                string position = "";
                string speed    = "";

                //讀取 Socket定位攝影機軸 資訊
                byte[] aGetGetIAI = new byte[2];
                clsServoControlWMX3.WMX3_GetInIO(ref aGetGetIAI, (int)(addr_IAI.pxeaI_GetStatusSignal2_2Bytes) / 10, 2);
                rslt += ((aGetGetIAI[(int)(addr_IAI.pxeaI_GetServoONState - addr_IAI.pxeaI_GetStatusSignal2_2Bytes) / 10] & (1 << (int)(addr_IAI.pxeaI_GetServoONState) % 10)) != 0) ? 1 : 0;

                byte[] aGetSetIAI = new byte[2];
                clsServoControlWMX3.WMX3_GetOutIO(ref aGetSetIAI, (int)(addr_IAI.pxeaI_SetControlSignal2_2Bytes) / 10, 2);
                rslt += ((aGetSetIAI[(int)(addr_IAI.pxeaI_SetDisableBrake - addr_IAI.pxeaI_SetControlSignal2_2Bytes) / 10] & (1 << (int)(addr_IAI.pxeaI_SetDisableBrake) % 10)) != 0) ? 1 : 0;

                //當數值有效
                if(true) { 
                    lbl_IAI_RAW.Visible               = bshow_debug_RAW_Conver_Back_Value;
                    lbl_IAI_Convert.Visible           = bshow_debug_RAW_Conver_Back_Value;
                    lbl_IAI_Back.Visible              = bshow_debug_RAW_Conver_Back_Value;


                    //得到原始數值
                    int Convert                   = clsServoControlWMX3.WMX3_IAI(addr_IAI.pxeaI_GetPosition, 0);
                    int Speed                     = clsServoControlWMX3.WMX3_IAI(addr_IAI.pxeaI_GetCurrentSpeed4Bytes, 0);
                    lbl_IAI_RAW.Text              = Convert.ToString();

                    //得到轉換數值
                    double dbGet                  = calculate.Map(Convert, MaxRAW, MinRAW, Mindb, Maxdb);
                    double dbSpeed                = Speed / dbSpdF;
                    lbl_IAI_Convert.Text          = dbGet.ToString("F3");

                    //轉回原始數值
                    int cnback                    = (int)calculate.Map((int)dbGet, (int)Mindb, (int)Maxdb, (double)MaxRAW, (double)MinRAW);
                    lbl_IAI_Back.Text             = cnback.ToString();


                    //顯示讀取長度
                    dbRstIAI                      = dbGet;
                    lbl_acpos_IAI.Text            = dbRstIAI.ToString("F3");

                    //顯示運動速度
                    lbl_spd_IAI.Text              = dbSpeed.ToString("F3");
                }

                //變更顏色
                if (rslt == 2) {
                    select_Socket檢測.BackColor      = Color.Red;
                    lbl_acpos_IAI.BackColor          = Color.White;
                    lbl_spd_IAI.BackColor            = Color.White;
                } else {
                    select_Socket檢測.BackColor      = Color.Green;
                    lbl_acpos_IAI.BackColor          = Color.Gray;
                    lbl_spd_IAI.BackColor            = Color.Gray;
                }

            }  // end of Socket定位攝影機軸 讀取與顯示

            if (dbIncreaseGate == dbRead) {

            } else {  //IAI 變更位置
                //伸長量overflow保護
                if( Mindb<=dbIncreaseGate && dbIncreaseGate<=Maxdb ) {

                } else if( dbIncreaseGate<= Mindb) {
                    dbIncreaseGate = (int)Mindb;
                } else if( Maxdb<=dbIncreaseGate ) {
                    dbIncreaseGate = (int)Maxdb;
                }

                // 取得欲變更的的浮點數
                double fChangeGate = calculate.Map(dbIncreaseGate, (double)Mindb, (double)Maxdb, (double)Maxdb, (double)Mindb);

                clsServoControlWMX3.WMX3_IAI(addr_IAI.pxeaI_BrakeOff, 1);

                //執行移動工作門
                clsServoControlWMX3.WMX3_IAI(addr_IAI.pxeaI_GoToPosition, fChangeGate);
            }

            return dbRstIAI;
        }  // end of public double dbapiGate(double dbIncreaseGate)  //IAI
